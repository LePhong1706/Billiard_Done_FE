// <auto-generated />
using System;
using BilliardShop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilliardShop.Infrastructure.Migrations
{
    [DbContext(typeof(BilliardShopDbContext))]
    [Migration("20250821042047_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BilliardShop.Domain.Entities.BaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaBaiViet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DuongDanBaiViet")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhAnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("LuotXem")
                        .HasColumnType("int");

                    b.Property<string>("MoTaSEO")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXuatBan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<bool>("NoiBat")
                        .HasColumnType("bit");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TacGia")
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TieuDeSEO")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TomTat")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TuKhoaSEO")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DuongDanBaiViet")
                        .IsUnique();

                    b.HasIndex("TacGia");

                    b.ToTable("BaiViet", null, t =>
                        {
                            t.HasCheckConstraint("CK_BaiViet_TrangThai", "[TrangThai] IN ('NhapBan', 'ChoXuatBan', 'XuatBan')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BienDongKhoHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaBienDong");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LoaiBienDong")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiThucHien")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("ThamChieu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TonKhoSau")
                        .HasColumnType("int");

                    b.Property<int>("TonKhoTruoc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.HasIndex("NguoiThucHien");

                    b.ToTable("BienDongKhoHang", null, t =>
                        {
                            t.HasCheckConstraint("CK_BienDongKhoHang_LoaiBienDong", "[LoaiBienDong] IN ('NHAP', 'XUAT', 'DIEU_CHINH')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BinhLuanBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaBinhLuan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailNguoiBinhLuan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaBaiViet")
                        .HasColumnType("int");

                    b.Property<int?>("MaBinhLuanCha")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayDuyet")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiDuyet")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("NoiDungBinhLuan")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenNguoiBinhLuan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("MaBaiViet");

                    b.HasIndex("MaBinhLuanCha");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("NguoiDuyet");

                    b.ToTable("BinhLuanBaiViet", null, t =>
                        {
                            t.HasCheckConstraint("CK_BinhLuanBaiViet_TrangThai", "[TrangThai] IN ('ChoDuyet', 'DaDuyet', 'BiTuChoi')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.CaiDatHeThong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaCaiDat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GiaTriCaiDat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaCaiDat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KieuDuLieu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhoaCaiDat")
                        .IsUnique();

                    b.HasIndex("NguoiCapNhatCuoi");

                    b.ToTable("CaiDatHeThong", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.ChiTietDonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaChiTietDonHang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaCodeSanPham")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietDonHang", null, t =>
                        {
                            t.HasCheckConstraint("CK_ChiTietDonHang_DonGia", "[DonGia] >= 0");

                            t.HasCheckConstraint("CK_ChiTietDonHang_SoLuong", "[SoLuong] > 0");

                            t.HasCheckConstraint("CK_ChiTietDonHang_ThanhTien", "[ThanhTien] >= 0");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhGiaSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDanhGia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaDuyet")
                        .HasColumnType("bit");

                    b.Property<int>("DiemDanhGia")
                        .HasColumnType("int");

                    b.Property<bool>("LaMuaHangXacThuc")
                        .HasColumnType("bit");

                    b.Property<int?>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayDuyet")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiDuyet")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("NoiDungDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("MaSanPham");

                    b.HasIndex("NguoiDuyet");

                    b.ToTable("DanhGiaSanPham", null, t =>
                        {
                            t.HasCheckConstraint("CK_DanhGiaSanPham_DiemDanhGia", "[DiemDanhGia] BETWEEN 1 AND 5");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhMucSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDanhMuc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DuongDanDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HinhAnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MaDanhMucCha")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThuTuSapXep")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DuongDanDanhMuc")
                        .IsUnique();

                    b.HasIndex("MaDanhMucCha");

                    b.ToTable("DanhMucSanPham", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhSachYeuThich", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaYeuThich");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.HasIndex("MaNguoiDung", "MaSanPham")
                        .IsUnique()
                        .HasDatabaseName("UK_DanhSachYeuThich_NguoiDung_SanPham");

                    b.ToTable("DanhSachYeuThich", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DiaChiNguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDiaChi");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTenNguoiNhan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LaDiaChiMacDinh")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiDiaChi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaBuuDien")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("PhuongXa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QuanHuyen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SoDienThoaiNguoiNhan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TinhThanhPho")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("DiaChiNguoiDung", null, t =>
                        {
                            t.HasCheckConstraint("CK_DiaChiNguoiDung_LoaiDiaChi", "[LoaiDiaChi] IN ('GiaoHang', 'ThanhToan', 'CaHai')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDonHang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChiGiaoHang")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DiaChiThanhToan")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmailKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChuKhachHang")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChuQuanTri")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhuongThucThanhToan")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhuongThucVanChuyen")
                        .HasColumnType("int");

                    b.Property<int>("MaTrangThai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDatHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNhanHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayYeuCauGiao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<decimal>("PhiVanChuyen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoDienThoaiKhachHang")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoDonHang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TienGiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TienThue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTienHang")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("MaPhuongThucThanhToan");

                    b.HasIndex("MaPhuongThucVanChuyen");

                    b.HasIndex("MaTrangThai");

                    b.HasIndex("SoDonHang")
                        .IsUnique()
                        .HasDatabaseName("IX_DonHang_SoDonHang");

                    b.ToTable("DonHang", null, t =>
                        {
                            t.HasCheckConstraint("CK_DonHang_TrangThaiThanhToan", "[TrangThaiThanhToan] IN ('ChoThanhToan', 'DaThanhToan', 'ThatBai', 'HoanTien')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaGioHang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<string>("MaPhienLamViec")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaNguoiDung");

                    b.HasIndex("MaSanPham");

                    b.ToTable("GioHang", null, t =>
                        {
                            t.HasCheckConstraint("CK_GioHang_SoLuong", "[SoLuong] > 0");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.HinhAnhSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHinhAnh");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DuongDanHinhAnh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LaHinhAnhChinh")
                        .HasColumnType("bit");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("TextThayThe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ThuTuSapXep")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.ToTable("HinhAnhSanPham", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.MaGiamGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaMaGiamGia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("GiaTriDonHangToiThieu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaTriGiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoaiGiamGia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<int>("SoLuotDaSuDung")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuotSuDungToiDa")
                        .HasColumnType("int");

                    b.Property<int>("SoLuotSuDungToiDaMoiNguoi")
                        .HasColumnType("int");

                    b.Property<decimal?>("SoTienGiamToiDa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenMaGiamGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MaCode")
                        .IsUnique();

                    b.ToTable("MaGiamGia", null, t =>
                        {
                            t.HasCheckConstraint("CK_MaGiamGia_GiaTriGiamGia", "[GiaTriGiamGia] > 0");

                            t.HasCheckConstraint("CK_MaGiamGia_LoaiGiamGia", "[LoaiGiamGia] IN ('PhanTram', 'SoTienCoDinh')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNguoiDung");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaXacThucEmail")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Ho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LanDangNhapCuoi")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaVaiTro")
                        .HasColumnType("int");

                    b.Property<string>("MatKhauMaHoa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MuoiMatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_NguoiDung_Email");

                    b.HasIndex("MaVaiTro");

                    b.HasIndex("TenDangNhap")
                        .IsUnique()
                        .HasDatabaseName("IX_NguoiDung_TenDangNhap");

                    b.ToTable("NguoiDung", null, t =>
                        {
                            t.HasCheckConstraint("CK_NguoiDung_GioiTinh", "[GioiTinh] IN ('M', 'F', 'K')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.NhaCungCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNhaCungCap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<string>("NguoiLienHe")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("QuocGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ThanhPho")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.NhatKyHeThong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNhatKy");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChiIP")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("GiaTriCu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HanhDong")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaBanGhi")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<string>("TenBang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThongTinTrinhDuyet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("NhatKyHeThong", null, t =>
                        {
                            t.HasCheckConstraint("CK_NhatKyHeThong_HanhDong", "[HanhDong] IN ('THEM', 'SUA', 'XOA')");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.PhuongThucThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaPhuongThucThanhToan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenPhuongThuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.PhuongThucVanChuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaPhuongThucVanChuyen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("PhiCoBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PhiTheoTrongLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SoNgayDuKien")
                        .HasColumnType("int");

                    b.Property<string>("TenPhuongThuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucVanChuyen", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaSanPham");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatLieu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DuongDanSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("GiaGoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaKhuyenMai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaVon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KichCo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KichThuoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LaSanPhamKhuyenMai")
                        .HasColumnType("bit");

                    b.Property<bool>("LaSanPhamNoiBat")
                        .HasColumnType("bit");

                    b.Property<string>("MaCodeSanPham")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<int?>("MaThuongHieu")
                        .HasColumnType("int");

                    b.Property<string>("MauSac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTaChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaNgan")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MoTaSEO")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTaoMaSanPham")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongToiDa")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongToiThieu")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TieuDeSEO")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TrongLuong")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TuKhoaSEO")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DuongDanSanPham")
                        .IsUnique()
                        .HasDatabaseName("IX_SanPham_DuongDanSanPham");

                    b.HasIndex("MaCodeSanPham")
                        .IsUnique()
                        .HasDatabaseName("IX_SanPham_MaCodeSanPham");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaThuongHieu");

                    b.HasIndex("NguoiTaoMaSanPham");

                    b.ToTable("SanPham", null, t =>
                        {
                            t.HasCheckConstraint("CK_SanPham_GiaGoc", "[GiaGoc] >= 0");

                            t.HasCheckConstraint("CK_SanPham_GiaKhuyenMai", "[GiaKhuyenMai] >= 0");

                            t.HasCheckConstraint("CK_SanPham_GiaVon", "[GiaVon] >= 0");

                            t.HasCheckConstraint("CK_SanPham_SoLuongTonKho", "[SoLuongTonKho] >= 0");
                        });
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.SuDungMaGiamGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaSuDung");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int>("MaMaGiamGia")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySuDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTienGiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaMaGiamGia");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("SuDungMaGiamGia", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.ThuocTinhSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaThuocTinh");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GiaTriThuocTinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<string>("TenThuocTinh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ThuocTinhSanPham", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.ThuongHieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaThuongHieu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DuongDanThuongHieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoThuongHieu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("QuocGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DuongDanThuongHieu")
                        .IsUnique();

                    b.HasIndex("TenThuongHieu")
                        .IsUnique();

                    b.ToTable("ThuongHieu", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.TrangThaiDonHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTrangThai");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ThuTuSapXep")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiDonHang", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.VaiTroNguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaVaiTro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhatCuoi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiCapNhatCuoi")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiTao")
                        .HasColumnType("int");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThaiHoatDong")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("VaiTroNguoiDung", (string)null);
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BaiViet", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "TacGiaNavigation")
                        .WithMany("BaiViets")
                        .HasForeignKey("TacGia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_BaiViet_TacGia");

                    b.Navigation("TacGiaNavigation");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BienDongKhoHang", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("BienDongKhoHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_BienDongKhoHang_SanPham");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiThucHienNavigation")
                        .WithMany()
                        .HasForeignKey("NguoiThucHien")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_BienDongKhoHang_NguoiDung");

                    b.Navigation("NguoiThucHienNavigation");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BinhLuanBaiViet", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.BaiViet", "BaiViet")
                        .WithMany("BinhLuans")
                        .HasForeignKey("MaBaiViet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BinhLuanBaiViet_BaiViet");

                    b.HasOne("BilliardShop.Domain.Entities.BinhLuanBaiViet", "BinhLuanCha")
                        .WithMany("BinhLuanCons")
                        .HasForeignKey("MaBinhLuanCha")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_BinhLuanBaiViet_BinhLuanCha");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_BinhLuanBaiViet_NguoiDung");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDuyetNavigation")
                        .WithMany()
                        .HasForeignKey("NguoiDuyet")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_BinhLuanBaiViet_NguoiDuyet");

                    b.Navigation("BaiViet");

                    b.Navigation("BinhLuanCha");

                    b.Navigation("NguoiDung");

                    b.Navigation("NguoiDuyetNavigation");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.CaiDatHeThong", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiCapNhat")
                        .WithMany()
                        .HasForeignKey("NguoiCapNhatCuoi")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_CaiDatHeThong_NguoiCapNhat");

                    b.Navigation("NguoiCapNhat");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.ChiTietDonHang", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietDonHang_DonHang");

                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietDonHang_SanPham");

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhGiaSanPham", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_DanhGiaSanPham_DonHang");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_DanhGiaSanPham_NguoiDung");

                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("DanhGias")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DanhGiaSanPham_SanPham");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDuyetNavigation")
                        .WithMany()
                        .HasForeignKey("NguoiDuyet")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_DanhGiaSanPham_NguoiDuyet");

                    b.Navigation("DonHang");

                    b.Navigation("NguoiDung");

                    b.Navigation("NguoiDuyetNavigation");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhMucSanPham", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.DanhMucSanPham", "DanhMucCha")
                        .WithMany("DanhMucCons")
                        .HasForeignKey("MaDanhMucCha")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_DanhMucSanPham_DanhMucCha");

                    b.Navigation("DanhMucCha");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhSachYeuThich", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("YeuThichs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DanhSachYeuThich_NguoiDung");

                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("YeuThichs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DanhSachYeuThich_SanPham");

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DiaChiNguoiDung", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("DiaChis")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DiaChiNguoiDung_NguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DonHang", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_DonHang_NguoiDung");

                    b.HasOne("BilliardShop.Domain.Entities.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaPhuongThucThanhToan")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_DonHang_PhuongThucThanhToan");

                    b.HasOne("BilliardShop.Domain.Entities.PhuongThucVanChuyen", "PhuongThucVanChuyen")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaPhuongThucVanChuyen")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_DonHang_PhuongThucVanChuyen");

                    b.HasOne("BilliardShop.Domain.Entities.TrangThaiDonHang", "TrangThai")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaTrangThai")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DonHang_TrangThaiDonHang");

                    b.Navigation("NguoiDung");

                    b.Navigation("PhuongThucThanhToan");

                    b.Navigation("PhuongThucVanChuyen");

                    b.Navigation("TrangThai");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.GioHang", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_GioHang_NguoiDung");

                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GioHang_SanPham");

                    b.Navigation("NguoiDung");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.HinhAnhSanPham", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HinhAnhSanPham_SanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.NguoiDung", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.VaiTroNguoiDung", "VaiTro")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_NguoiDung_VaiTroNguoiDung");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.NhatKyHeThong", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_NhatKyHeThong_NguoiDung");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.SanPham", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.DanhMucSanPham", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SanPham_DanhMucSanPham");

                    b.HasOne("BilliardShop.Domain.Entities.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaThuongHieu")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_SanPham_ThuongHieu");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiTao")
                        .WithMany("SanPhamsTao")
                        .HasForeignKey("NguoiTaoMaSanPham")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_SanPham_NguoiTao");

                    b.Navigation("DanhMuc");

                    b.Navigation("NguoiTao");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.SuDungMaGiamGia", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.DonHang", "DonHang")
                        .WithMany("SuDungMaGiamGias")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SuDungMaGiamGia_DonHang");

                    b.HasOne("BilliardShop.Domain.Entities.MaGiamGia", "MaGiamGia")
                        .WithMany("SuDungMaGiamGias")
                        .HasForeignKey("MaMaGiamGia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SuDungMaGiamGia_MaGiamGia");

                    b.HasOne("BilliardShop.Domain.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_SuDungMaGiamGia_NguoiDung");

                    b.Navigation("DonHang");

                    b.Navigation("MaGiamGia");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.ThuocTinhSanPham", b =>
                {
                    b.HasOne("BilliardShop.Domain.Entities.SanPham", "SanPham")
                        .WithMany("ThuocTinhs")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ThuocTinhSanPham_SanPham");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BaiViet", b =>
                {
                    b.Navigation("BinhLuans");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.BinhLuanBaiViet", b =>
                {
                    b.Navigation("BinhLuanCons");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DanhMucSanPham", b =>
                {
                    b.Navigation("DanhMucCons");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("SuDungMaGiamGias");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.MaGiamGia", b =>
                {
                    b.Navigation("SuDungMaGiamGias");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.NguoiDung", b =>
                {
                    b.Navigation("BaiViets");

                    b.Navigation("DanhGias");

                    b.Navigation("DiaChis");

                    b.Navigation("DonHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("SanPhamsTao");

                    b.Navigation("YeuThichs");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.PhuongThucThanhToan", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.PhuongThucVanChuyen", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.SanPham", b =>
                {
                    b.Navigation("BienDongKhoHangs");

                    b.Navigation("ChiTietDonHangs");

                    b.Navigation("DanhGias");

                    b.Navigation("GioHangs");

                    b.Navigation("HinhAnhs");

                    b.Navigation("ThuocTinhs");

                    b.Navigation("YeuThichs");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.ThuongHieu", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.TrangThaiDonHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("BilliardShop.Domain.Entities.VaiTroNguoiDung", b =>
                {
                    b.Navigation("NguoiDungs");
                });
#pragma warning restore 612, 618
        }
    }
}
